services:
  backend:
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    working_dir: /var/www/tuile/backend 
    ports:
      - "${BACKEND_PORT}:4000"
    expose:
      - "4000"
    environment:
      NODE_ENV: development
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    networks:
      - app-network
    depends_on:
      - postgres
    volumes:
      - ./backend:/var/www/tuile/backend 
    command: npm i && npm run dev

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
    networks:
      - app-network
    volumes:
      - ./frontend/src:/app/src
    command: npm start
    depends_on:
      - backend

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: