import { useEffect, useState } from 'react';
import {{pascalCase name}}Service from '@/modules/{{pascalCase name}}/services/{{pascalCase name}}Service';
import { I{{pascalCase name}} } from '@/modules/{{pascalCase name}}/models/I{{pascalCase name}}';
import Datatable from '@/common/components/advanced/Datatable/Datatable';
import { Column } from 'primereact/column';

const {{pascalCase name}}IndexDatatable = () => {
  const [{{camelCase name}}s, set{{pascalCase name}}s] = useState<I{{pascalCase name}}[]>([]);
  const [totalRecords, setTotalRecords] = useState<number>(0);
  const page = 1;
  const rows = 9;
  const searchQuery = '';

  useEffect(() => {
    fetchData(page, rows, searchQuery);
  }, [page, rows, searchQuery]);

  const fetchData = async (page: number, offset: number, search?: string) => {
    try {
      const dataInfos = await {{pascalCase name}}Service.get{{pascalCase name}}s(page, offset, search);
      set{{pascalCase name}}s(dataInfos.data);
      setTotalRecords(dataInfos.totalRecords);
    } catch (err) {
      console.error('Erreur lors de la récupération des {{pascalCase name}}s:', err);
    }
  };

  // Permet de gérer les actions personnalisées dans le header du Datatable
  const headerCustomActions = () => <></>;

  // Permet de gérer les actions personnalisées dans la colonne action du Datatable
  const rowCustomActions = (rowData: I{{pascalCase name}}) => <></>;

  return (
    <Datatable
      values={ {{camelCase name}}s }
      headerGenericActions={[]}
      headerCustomActions={headerCustomActions}
      rowGenericActions={['show', 'edit', 'delete']}
      rowCustomActions={rowCustomActions}
      totalRecords={totalRecords}
      fetchData={fetchData}
    >
      {/* Générer les colonnes selon l'entité ici */}
      <></>
    </Datatable>
  );
};

export default {{pascalCase name}}IndexDatatable;
